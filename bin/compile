#!/usr/bin/env bash

# compile <build_dir> <cache_dir>

set -e

BUILD_DIR=$1
CACHE_DIR=$2

MEMCACHIER_ROOT_CA=https://www.memcachier.com/MemCachierRootCA.pem
STUNNEL_DIR=$BUILD_DIR/vendor/stunnel

# Cedar-14's pre-installed stunnel is very old, so we vendor a newer version.
if [[ "$STACK" == "cedar-14" ]]; then
  STUNNEL_URL="https://s3.amazonaws.com/memcachier-files/stunnel-cedar-14.tgz"
  STUNNEL_TGZ=$CACHE_DIR/stunnel.tgz

  mkdir -p $CACHE_DIR

  if [ ! -f $STUNNEL_TGZ ]; then
    echo "-----> Fetching stunnel"
    curl $STUNNEL_URL -s -o $STUNNEL_TGZ
  fi

  echo "-----> Vendoring stunnel into slug"
  mkdir -p $STUNNEL_DIR
  tar xzf $STUNNEL_TGZ -C $STUNNEL_DIR
fi

mkdir -p $STUNNEL_DIR/bin

cat > $STUNNEL_DIR/bin/stunnel_genconf <<EOF
#!/usr/bin/env ruby

servers = (ENV["MEMCACHIER_SERVERS"] || "").split(",").map! do |line|
  "#{line.split(":").first}:11219"
end

File.open("/tmp/memcachier-stunnel.conf", "w+") do |f|
  f.write("pid = #{ENV["HOME"]}/vendor/stunnel/stunnel4.pid\n")
  f.write("client = yes\n")
  f.write("verify = 2\n")
  f.write("\n[memcachier]\n")
  servers.each do |server|
    f.write("connect = #{server}\n")
  end
  f.write("accept = 127.0.0.1:11211\n")
  f.write("CAfile = #{ENV["HOME"]}/vendor/stunnel/etc/ssl/certs/MemCachierRootCA.pem\n")
end

puts "/tmp/memcachier-stunnel.conf"
EOF

chmod +x $STUNNEL_DIR/bin/stunnel_genconf

echo "-----> Fetching MemCachier Root CA"
mkdir -p $STUNNEL_DIR/etc/ssl/certs/
curl $MEMCACHIER_ROOT_CA -s -o $STUNNEL_DIR/etc/ssl/certs/MemCachierRootCA.pem

mkdir -p $BUILD_DIR/.profile.d
echo "export PATH=\"\$HOME/vendor/stunnel/bin:\$PATH\"" > $BUILD_DIR/.profile.d/stunnel.sh
echo "stunnel_genconf" >> $BUILD_DIR/.profile.d/stunnel.sh
echo "stunnel /tmp/memcachier-stunnel.conf" >> $BUILD_DIR/.profile.d/stunnel.sh

echo "-----> stunnel done"
